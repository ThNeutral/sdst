// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_queries.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO Users (user_id, first_name, last_name, password, email, created_at, last_login, role_id)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
RETURNING user_id, first_name, last_name, password, email, created_at, last_login, role_id
`

type CreateUserParams struct {
	UserID    uuid.UUID
	FirstName string
	LastName  string
	Password  string
	Email     string
	CreatedAt pgtype.Timestamp
	LastLogin pgtype.Timestamp
	RoleID    uuid.UUID
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.UserID,
		arg.FirstName,
		arg.LastName,
		arg.Password,
		arg.Email,
		arg.CreatedAt,
		arg.LastLogin,
		arg.RoleID,
	)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.FirstName,
		&i.LastName,
		&i.Password,
		&i.Email,
		&i.CreatedAt,
		&i.LastLogin,
		&i.RoleID,
	)
	return i, err
}
